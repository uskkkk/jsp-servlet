package controller.board;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.websocket.Session;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.FileRenamePolicy;

import dao.BoardDao;
import service.BoardServiceImpl;
import util.MyFileRenamePolicy;
import vo.Attach;
import vo.Board;
import vo.Member;

@WebServlet("/board/update")
public class Update extends HttpServlet{

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		Long bno = Long.parseLong(req.getParameter("bno"));
		// 글 삭제
		// 글번호 받아오기
//		Board board = new BoardServiceImpl().read(bno);
		
		String id = ((Member)req.getSession().getAttribute("member")).getId();
		
		System.out.println(id);
		
		HttpSession session = req.getSession();
	    session.setAttribute("notice", new BoardServiceImpl().read(bno));
	    
	    System.out.println(session.getAttribute("notice"));
		
		
		
		req.getRequestDispatcher("/WEB-INF/jsp/board/update.jsp").forward(req, resp);
		
		
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	      // 글 제목
	      // 글 내용
	      // 작성자
	      
	      // 선행 작업
	      // session의 member이 null에 대한 예외처리
	      String saveDirectory = "D:\\upload";
	      String path = getPath();
	      
	      File uploadPath = new File(saveDirectory + File.separator + path);
	      if(!uploadPath.exists()) {
	         uploadPath.mkdirs();
	      }
	      
	      int maxPostSize = 10 * 1024 * 1024;
	      String encoding = "utf-8";
	      FileRenamePolicy policy = new MyFileRenamePolicy();
	      MultipartRequest multi;
	      multi = new MultipartRequest(req, uploadPath.getAbsolutePath(), maxPostSize, encoding, policy);
	      

	      Enumeration<String> files = multi.getFileNames();
	      List<Attach> attachs = new ArrayList<>();
	      while(files.hasMoreElements()) {
	         String file = files.nextElement();
	         String uuid = multi.getFilesystemName(file);
	         if(uuid == null) continue;
	         String origin = multi.getOriginalFileName(file);
	         
	         Attach attach = new Attach(uuid, origin, null, path);
	         attachs.add(attach);
	      }
	      
//	      attachs.forEach(System.out::println);
	      
	      String title = multi.getParameter("title");
	      String content = multi.getParameter("content");
	      String id = ((Member)req.getSession().getAttribute("member")).getId();
	      
	      System.out.println(id);
	      	
	      Board board = new Board(title, content, id, 1L);
	      board.setAttachs(attachs);
	    
	      // 첨부 파일 수정작업
//	      if(files.hasMoreElements()) {
//	    	  String fileName = files.nextElement();
//	    	  String updateFile = multi.getFilesystemName(fileName);
//	    	  
//	    	  if(fileName == null) {
//	    		  board.setTitle(title);
//	    	  } else {
//	    		  
//	    	  }
//	      }
//	      req.setAttribute("board", new BoardServiceImpl().read(bno));
//	      HttpSession session = req.getSession();
//	       session.setAttribute("notice", new BoardServiceImpl().read(id));
//	      
//	      System.out.println(session.getAttribute("notice"));
	      
	      new BoardServiceImpl().modify(board);
	      
//	      resp.sendRedirect("notice");
	   }
	   private String getPath() {
	      return new SimpleDateFormat("yyMMdd").format(new Date());
	   }
	   
}
